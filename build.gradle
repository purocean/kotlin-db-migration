buildscript {
    ext.kotlin_version = '1.3.11'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'info.purocean'
version '1.2.0'

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile('mysql:mysql-connector-java:6.0.6')
    compile('org.reflections:reflections:0.9.11')
    testCompile('junit:junit:4.12')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom {
                name = 'kotlin-db-migration'
                description = 'A MySQL db migration'
                url = 'https://github.com/purocean/kotlin-db-migration'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/purocean/kotlin-db-migration/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/purocean/kotlin-db-migration'
                    connection = 'scm:https://github.com/purocean/kotlin-db-migration.git'
                    developerConnection = 'scm:git://github.com/purocean/kotlin-db-migration.git'
                }
                developers {
                    developer {
                        id = 'purocean'
                        name = 'YangZi'
                        email = 'purocean@outlook.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
//            mavenLocal()

            url = version.endsWith('SNAPSHOT')
                    ? "https://oss.sonatype.org/content/repositories/snapshots"
                    : "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username NEXUS_USERNAME
                password NEXUS_PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
